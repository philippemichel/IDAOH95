---
subtitle: "Rapport statistique V1.1"
cache: false
---


```{r}
#| label: info

rm(list = ls())
classeur <- "idaoh95_2.ods"
expx <- TRUE
#if(expx){file.create(classeur)}
#
library(corrplot)
library(readODS)
library(baseph)
library(GGally)
library(ggsci)
library(ggstats)
library(tidyverse)
library(scales)
library(ggridges)
library(kableExtra)
library(gtsummary)
library(DataExplorer)
library(colorspace)
library(forestmodel)
library(psych)
library(fmsb)
library(labelled)

# sessionInfo()
theme_gtsummary_language(language = "fr", decimal.mark = ",")
# theme_gtsummary_journal(journal = "jama")
options(OutDec = ",")
ptest <- list(all_continuous() ~ "wilcox.test", all_categorical() ~ "chisq.test")
#
load("data/idaoh.RData")

dir_ide <- left_join(dire,idec,by = "no_etab")

prof <- c("dire", "medco","idec")
nprof <- c("Directeurs", "Médecins coordonateurs", "IDEC")
nbprof <- c(41,33,57)
```

# Généralités

Les données concernent les réponses de trois professions :

- Directeurs d'hôpitaux (`r nrow(dire)` réponses)
- Médecins coordonateurs (`r nrow(medco)` réponses)
- \gls{idec} (`r nrow(idec)` réponses)


Pour les variables en `Oui/Non` le nombre & pourcentage présent dans les tableaux correspond aux `Oui`.

Pour toute les réponses à choix multiple le total des réponses correspond au nombre de réponses & non au nombre de participants.

L'analyse factorielle n'a pu être réalisée. 

## Validation des questionnaires

Les questionnaires sont bien remplis avec très peu de données manquantes. Il n'y aura donc pas besoin d'un traitement particulier (imputation\dots) pour celles-ci. Les variables constantes (toutes les réponses identiques) ou à réponses multiples ne sont pas représentées. 
 

```{r}
#| label: cor-prep

corx <- function(prof,titx){
  tit <- paste0("Corrélations - ",titx)
  prof |> 
   mutate_if(is.factor, as.numeric) |> 
   dplyr::select(!id) |> 
   ggcorr(drop = TRUE, hjust = 0.9) +
    scale_fill_continuous_sequential(palette = "Dark Mint") +   
  labs(title = tit,
      y = "n",
      caption = "Corrélations. Validation interne du questionnaire."
      ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_blank(),
    legend.title = element_blank(),
    axis.title.y = element_blank(),,
         axis.text.x = element_text(size = 12 ),
      axis.text.y = element_text(size = 12),
      legend.position = "right")
    }
```

```{r}
#| label: fig-corddire
#| fig-cap: Corrélations internes - directeurs
dire |> 
  janitor::remove_constant() |> 
  dplyr::select(- organisations_specifiques, - nb_lits_rec) |> 
  dplyr::select(- contains("moyen")) |> 
corx("Directeurs")
```

```{r}
#| label: fig-cormedco
#| fig-cap: Corrélations internes - médecins coordonateurs

medco |> 
  dplyr::select(!starts_with(c("ars", "quelles"))) |> 
  janitor::remove_constant() |> 
corx("Médecins coordonateurs")
```


```{r}
#| label: fig-cordidec
#| fig-cap: Corrélations internes - IDEC

corx(idec, "IDEC")
```



Les corrélations fortes concernent :

- pour les directeurs, des données influencées par la taille de l'établissement; 
- pour les \gls{idec}, des données liées à l'ancienneté voire à l'implication dans le travail.

Dans les deux cas ces corrélations demeurent raisonnables & ont du sens donc ne posent pas de problème.

```{r}
#| label: tbl-cron
#| tbl-cap: Cœfficient alpha de Cronbach


cron <- function(prof){
zz <- prof |>  
  drop_na() |> 
   mutate_if(is.factor, as.numeric) |> 
  alpha(check.keys=TRUE)
zz <- zz$total
zz <- round(zz$std.alpha,2)
return(zz)
}
#
crondir <- cron(dire)
cronmed <- cron(medco)
cronid <- cron(idec)
#
cron <- c(crondir, cronmed,cronid)
cron <- tibble(nprof,cron)
names(cron) <- c("Profession", "Cœf. alpha")

cron |> 
kbl(bbooktabs = TRUE) |> 
  kable_styling()

if (expx) {
      cron |>
        as_tibble() |>
        write_ods(path = classeur, sheet = "cronbach", append = TRUE)
    }
```

Les coefficients $\alpha$ de Cronbach pour les trois questionnaires sont corrects vu la taille des échantillons ce qui confirme la qualité du remplissage. 

# Description

Les questions à réponses multiples ne sont pas présentées dans ces tableaux.

## Les établissements

Pour ces items on utilise les données recueillies auprès des directeurs.

```{r}
#| label: tbl-etab
#| tbl-cap: Établissements

dire |> 
  dplyr::select(structure:nb_ama) |> 
 tbl_summary(missing = "no",
             value = list(medecin_coordonnateur_present = "Oui",
                          idec_present = "Oui")) |> 
   bold_labels() |> 
   modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur , nomsheet = "etab", lg = TRUE) 
```

80 % des \textsc{Ehpad} tournent sans secrétariat ? 

### organisations spécifiques

```{r}
#| label: tbl-orgspe
#| tbl-cap: Organisations spécifiques

dire |> 
  dplyr::select(organisations_specifiques) |> 
  separate_rows(organisations_specifiques, sep = c(";")) |> 
  dplyr::filter(organisations_specifiques != "") |> 
  mutate(organisations_specifiques = factor(organisations_specifiques)) |> 
mutate(organisations_specifiques = 
  fct_recode(organisations_specifiques,
    "CLAN (Comité de Liaison Alimentation Nutrition)" = " Commission restauration",
    "CLUD(Comité de Lutte contre la Douleur)" = " douleur",
    "CLAN (Comité de Liaison Alimentation Nutrition)" = " nutrition",
    "CLAN (Comité de Liaison Alimentation Nutrition)" = "commission nutrition",
    "CLAN (Comité de Liaison Alimentation Nutrition)" = "Commission nutrition"
  )) |> 
 mutate(organisations_specifiques = fct_infreq(organisations_specifiques)) |> 
  mutate(organisations_specifiques = fct_lump_min(organisations_specifiques,2, other_level = "Autres")) |> 
 tbl_summary(missing = "no",
             label = organisations_specifiques ~ "Organisations spécifiques" ) |> 
   bold_labels() |> 
   modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur , nomsheet = "orgspe", lg = TRUE) 
```

## Médecins coordonateurs

```{r}
#| label: tbl-medco1
#| tbl-cap: Médecins coordonateurs - description

medco |> 
  dplyr::select(age:qnb_de_residents_pac,nb_d_annees,participation_commissions,deleguer_des_prescriptions) |> 
 tbl_summary(missing = "no",
             value = list(participation_commissions = "Oui",
               deleguer_des_prescriptions = "Oui")) |> 
   bold_labels() |> 
   modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur , nomsheet = "medco1", lg = TRUE) 
```

Les questions `Vous arrive-t-il de déléguer des prescriptions à des IDE ou \Gls{idec}, si Oui lesquelles ?` n'ont pas été traitées en raison du faible nombre de réponses.

## IDEC


```{r}
#| label: tbl-idec1
#| tbl-cap: IDEC - description

idec|> 
  dplyr::select(annees_experience,du_complementaire,arrive_prescrire) |> 
 tbl_summary(missing = "no",
             value = list(du_complementaire = "Oui",
                          arrive_prescrire = "Oui")) |> 
   bold_labels() |> 
   modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur , nomsheet = "idec", lg = TRUE) 
```

# Critère principal

*Les principales missions pouvant être déléguées à des IPA seront identifiées par auto-questionnaire des médecins coordonnateurs et des \gls{idec}*

Il existe des différences dans les réponses des médecins & des \gls{idec}. Les médecins sont plus réticents à laisser aux \gls{ipa} la prescription de bilans ou de traitements ainsi que l'interprétation des bilans ou l'évaluation quotidienne. 

```{r}
#| label: mission-prep

medmis <- medco |> 
  dplyr::select(missions_ipa_structure, prescripteur) |> 
  separate_longer_delim(c(missions_ipa_structure,prescripteur), delim = c(";")) |> 
  mutate(profession = "Médecin coordinateur")
var_label(medmis$missions_ipa_structure ) <- "Missions de l'IPA"


idecmis <- idec |> 
  dplyr::select(missions_ipa_structure) |>
  separate_rows(missions_ipa_structure, sep = c(";")) |> 
   mutate(profession = "IDEC")

mission <- medmis |> 
  dplyr::select(-prescripteur) |> 
rbind(idecmis) |> 
  dplyr::filter(missions_ipa_structure != "") |> 
  mutate(missions_ipa_structure = fct_infreq(missions_ipa_structure))

var_label(mission) <- c( "Quelles seraient pour vous les principales missions d’une IPA au sein de votre structure ","Profession")
```




```{r}
#| label: tbl-missionsipa1
#| tbl-cap: Missions pouvant être déléguées à des IPA

mission |> 
  tbl_summary(by = profession) |> 
#  add_overall(  col_label = "**Total**  \nN = {style_number(N)}") |>
    bold_labels() |> 
   add_p(test = ptest) |> 
   modify_header(label ~ " ") |>
  gexptabph(exp = expx, nomfich = classeur , nomsheet = "mission1") |> 
  column_spec(1, width = "30em") 
```



```{r}
#| label: fig-missionsipa1
#| fig-cap: Missions pouvant être déléguées à des IPA
#| fig-asp: 1.6
mission |> 
mutate(missions_rec =
  fct_recode(missions_ipa_structure,
    "Alerter le médecin" = "Alerter le médecin de toutes situations identifiées à risque",
    "Bilans paracliniques de suivi" = "Prescrire et évaluer les bilans paracliniques de suivi",
    "Suivi du patient" = "Planifier et coordonner le suivi du patient",
    "Traitements dispositifs médicaux" = "Renouveler, ou adapter les traitements, les dispositifs médicaux et le matériel",
    "Prise en charge globale" = "Coordonner en collaboration avec le médecin la prise en charge globale",
    "Évaluer cliniquement le patient" = "Évaluer cliniquement le patient dans son ensemble",
    "Mise en œuvre des traitements" = "Coordonner, en collaboration avec le médecin, la mise en œuvre des traitements",
    "Entretien avec le patient" = "Conduire un entretien avec le patient et en rédiger l’anamnèse",
    "Données issues de l’examen" = "Recueillir, interpréter et synthétiser les données issues de l’examen clinique et paraclinique",
    "Prévention, de dépistage, éducation" = "Concevoir et réaliser des actions de prévention, de dépistage et d’éducation à la santé",
    "Programme d’éducation thérapeutique" = "Concevoir et coordonner la mise en œuvre du programme d’éducation thérapeutique",
    "Évaluation de la fragilité" = "Evaluation de la fragilité"
  )) |> 
  mutate(missions_rec =fct_lump_min(missions_rec,24,, other_level = "Autres")) |> 
  ggplot() +
  aes(x = missions_rec, fill = profession) +
  geom_bar(stat = "count", position = "dodge") +
  labs(title = "Missions pouvant être déléguées à des IPA") +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_blank(),
  axis.text.x = element_text(size = 9,
      angle = 80,
      vjust = 0.5),
  axis.text.y = element_text(size = 12),
  legend.position = "top"
  ) 
 
```



```{r}
#| label: fig-mission-rad
#| fig-cap: Missions pouvant être déléguées à des IPA
#| fig-asp: 1.2

mission$missions_rec <- mission$missions_ipa_structure %>%
  fct_recode(
    "Alerter le médecin" = "Alerter le médecin de toutes situations identifiées à risque",
    "Bilans paracliniques de suivi" = "Prescrire et évaluer les bilans paracliniques de suivi",
    "Suivi du patient" = "Planifier et coordonner le suivi du patient",
    "Traitements dispositifs médicaux" = "Renouveler, ou adapter les traitements, les dispositifs médicaux et le matériel",
    "Prise en charge globale" = "Coordonner en collaboration avec le médecin la prise en charge globale",
    "Évaluer cliniquement le patient" = "Évaluer cliniquement le patient dans son ensemble",
    "Mise en œuvre traitements" = "Coordonner, en collaboration avec le médecin, la mise en œuvre des traitements",
    "Entretien avec le patient" = "Conduire un entretien avec le patient et en rédiger l’anamnèse",
    "Données issues de l’examen" = "Recueillir, interpréter et synthétiser les données issues de l’examen clinique et paraclinique",
    "Prévention, de dépistage, éducation" = "Concevoir et réaliser des actions de prévention, de dépistage et d’éducation à la santé",
    "Programme d’éducation thérapeutique" = "Concevoir et coordonner la mise en œuvre du programme d’éducation thérapeutique",
    "Évaluation de la fragilité" = "Evaluation de la fragilité"
  )
aa <- table(mission$profession,mission$missions_rec)
aa <- 100*aa/c(41,33)
max <- rep(100,13)
min <- rep(0,13)
aa <- rbind(max,min,aa)
aa <- data.frame(aa)
tit <- c("IDEC","Médecin coordinateur")
colx = c("#00AFBB", "#FC4E07")

par(cex = 0.6)
radarchart(aa, title = "Missions pouvant être déléguées à des IPA", pcol = colx, , plwd =2, plty = 1, vlcex = 1.3)
legend(
  x = "bottom", legend = rownames(aa[-c(1,2),]), horiz = TRUE, col = colx,
  bty = 0,pch = 20, yjust = -2, xjust = 0) 
```


```{r}
#| label: tbl-medpresc
#| tbl-cap: Missions pouvant être déléguées à des IPA (médecins)

medmis |> 
  dplyr::select(-profession) |> 
  dplyr::filter(missions_ipa_structure != "") |> 
  tbl_summary(by = prescripteur) |> 
#  add_overall(  col_label = "**Total**  \nN = {style_number(N)}") |>
    bold_labels() |> 
   add_p(test = ptest) |> 
   modify_header(label ~ " ") |>
  gexptabph(exp = expx, nomfich = classeur , nomsheet = "mission_presc") |> 
  column_spec(1, width = "30em") 
```

Il n'y a pas de différence visible entre les médecins coordonnateurs prescripteurs ou non pour leur vision du rôle de l'\gls{ipa}.

```{r}
#| label: tbl-ipa_nblits
#| tbl-cap: Missions pouvant être déléguées à des IPA (taille Ehpad)

left_join(dire,medco, join_by(no_etab == numero_d_identification_de_letablissement)) |> dplyr::select(missions_ipa_structure,nb_lits_rec) |>
  drop_na(missions_ipa_structure) |>
  separate_longer_delim(c(missions_ipa_structure,nb_lits_rec), delim = c(";")) |>
  dplyr::filter(missions_ipa_structure != "") |>
  tbl_summary(by = nb_lits_rec) |>
  #  add_overall(  col_label = "**Total**  \nN = {style_number(N)}") |>
  bold_labels() |>
  add_p(test = ptest) |>
  modify_header(label ~ " ") |>
  gexptabph(exp = expx, nomfich = classeur , nomsheet = "mission_nblits") |>
  column_spec(1, width = "30em")
```


# Critères secondaires

## Critère 1
*État des lieux des moyens disponibles dans les \textsc{Ehpad} du Val d’Oise*

Ce critère se base exclusivement sur les déclarations des directeurs d'établissement.

```{r}
#| label: tbl-moyens
#| tbl-cap: Moyens disponibles dans les \textsc{Ehpad} du Val d’Oise


dire |>
  dplyr::select(structure:nb_ama) |>
  tbl_summary(
    missing = "no",
    value = list(
      medecin_coordonnateur_present = "Oui",
      idec_present = "Oui"
    )
  ) |> 
bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx,
            nomfich = classeur ,
            nomsheet = "moyens",
            lg = FALSE)
```

## Critère 2
*Identifier le rôle effectif des médecins coordonnateurs*

```{r}
#| label: ars-prep

zz <- medco |> 
  dplyr::select(starts_with("ars_")) |> 
  pivot_longer(everything()) |> 

  
  ## Réordonnancement de zz$name
mutate(name = fct_relevel(name,
    "ars_1", "ars_2", "ars_3", "ars_4", "ars_5", "ars_6", "ars_7",
    "ars_8", "ars_9", "ars_10", "ars_11", "ars_12", "ars_13", "ars_14"
  )) |> 
  
 ## Recodage de zz$name
  ## Réordonnancement de zz$name
mutate(name = fct_recode(name,
    "Élabore, avec le concours de l'équipe soignante, le projet général de soins, s'intégrant dans le projet d'établissement, et coordonne et évalue sa mise en œuvre" = "ars_1",
    "Donne un avis sur les admissions des personnes à accueillir" = "ars_2",
    "Préside la commission de coordination gériatrique" = "ars_3",
    "Évalue et valide l'état de dépendance des résidents et leurs besoins en soins requis" = "ars_4",
    "Veille à l'application des bonnes pratiques gériatriques, formule toute recommandation utile dans ce domaine et contribue à l'évaluation de la qualité des soins" = "ars_5",
    "Contribue auprès des professionnels de santé exerçant dans l'établissement à la bonne adaptation aux impératifs gériatriques des prescriptions de médicaments et des produits et prestations" = "ars_6",
    "Contribue à la mise en œuvre d'une politique de formation et participe aux actions d'information des professionnels de santé exerçant dans l'établissement" = "ars_7",
    "Élabore un dossier type de soins" = "ars_8",
    "Établit, avec le concours de l'équipe soignante, un rapport annuel d'activité médicale" = "ars_9",
    "Donne un avis sur le contenu et participe à la mise en oeuvre de la ou des conventions conclues entre l'établissement et les établissements de santé" = "ars_10",
    "Collabore à la mise en oeuvre de réseaux gérontologiques coordonnés" = "ars_11",
    "Identifie les risques éventuels pour la santé publique dans les établissements et veille à la mise en oeuvre de toutes mesures utiles" = "ars_12",
    "Réalise des prescriptions médicales pour les résidents de l'établissement" = "ars_13",
    "Élabore, après avoir évalué leurs risques et leurs bénéfices avec le concours de l'équipe médico-sociale, les mesures particulières comprises dans l'annexe au contrat de séjour" = "ars_14"
  )) 
names(zz) <- c("Item", "Rôle")
```

```{r}
#| label: tbl-ars
#| tbl-cap: Rôle effectif des médecins coordonnateurs

zz |> 
  tbl_cross(margin = "row", percent = "row") |> 
     bold_labels() |> 
  as_kable_extra(booktabs = TRUE) |>
      kable_styling(latex_options = c("scale_down")) |> 
  column_spec(1, width = "30em") |> 
  column_spec(2:6, width = "15em") 
```


```{r}
#| label: fig-ars
#| fig-cap: Rôle effectif des médecins coordonnateurs
#| fig-asp: 1.5

medco |>
  dplyr::select(starts_with("ars_")) |>
  gglikert() +
  theme(
    legend.direction = "vertical",
    legend.position = "bottom",
    legend.text.align = 0,
    labs(title = "Rôle effectif des médecins coordonnateurs") +
      theme_light() +
      scale_fill_jama()
  )
```

\newpage

## Critère III

*Identifier le rôle effectif des \gls{idec}*

```{r}
#| label: idec-prep

nn <- as.character(paste0("idec",1:11))

zz <- idec |> 
  dplyr::select(classer_missions) |> 
  separate_wider_delim(classer_missions, delim = ";", names = nn) |> 
  mutate(across(everything(), as.factor)) |> 
  dplyr::select(- idec11)
var_label(zz$idec1) <- "Premier item cité"
```

```{r}
#| label: tbl-idec-premier
#| tbl-cap: Rôle effectif des IDEC (item classé en premier)

zz |> 
  dplyr::select(idec1) |>
  mutate(idec1 = fct_infreq(idec1)) |> 
  tbl_summary() |> 
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx,
            nomfich = classeur ,
            nomsheet = "idec_premier")

```

```{r}
#| label: tbl-idec-cinq
#| tbl-cap: Rôle effectif des IDEC (cinq premiers items cités)

zz |> 
  dplyr::select(idec1:idec5) |> 
  pivot_longer(everything(), values_to = "Item") |> 
  mutate(Item = fct_infreq(Item)) |> 
  dplyr::select(Item) |> 
  tbl_summary() |> 
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx,
            nomfich = classeur ,
            nomsheet = "idec_cinq")
```

```{r}
#| label: tbl-idec_etb
#| tbl-cap: Rôle effectif des IDEC  vs taille de l'établissement (premier item cité)

zz <- dir_ide |> 
  dplyr::select(classer_missions, nb_lits_rec) |> 
  separate_wider_delim(classer_missions, delim = ";", names = nn) |> 
#  drop_na(idec1) |> 
  mutate(across(everything(), as.factor)) |> 
  dplyr::select(- idec11)
var_label(zz$idec1) <- "Premier item cité"

zz |> 
  dplyr::select(idec1, nb_lits_rec) |>
  mutate(idec1 = fct_infreq(idec1)) |> 
  tbl_summary(by = nb_lits_rec, missing = "no") |> 
  bold_labels() |>
    modify_spanning_header(c("stat_1", "stat_2") ~ "**Taille de l'établissement**") |> 
  add_p(test = ptest) |> 
  modify_header(label ~ " ") |>
  pexptabph(exp = expx,
            nomfich = classeur ,
            nomsheet = "idec_etab_premier")
```



## Critère IV

*Évaluer la connaissance du métier d’\gls{ipa} au sein des \textsc{Ehpad}*


```{r}
#| label: ipa-prep

ipad <- dire |> 
  dplyr::select(missions_ipa,id) |> 
  separate_longer_delim(c(missions_ipa,id), delim = c(";")) |> 
  mutate(profession = "Directeur")

ipam <- medco |> 
  dplyr::select(principales_missions_ipa,id) |> 
  separate_longer_delim(c(principales_missions_ipa,id), delim = c(";")) |> 
  mutate(profession = "Médecin coordonateur")
names(ipam)[1] <-  "missions_ipa"

ipai <- idec |> 
  dplyr::select(missions_ipa,id) |> 
  separate_longer_delim(c(missions_ipa,id), delim = c(";")) |> 
  mutate(profession = "IDEC")

zz <- rbind(ipad,ipam,ipai) |> 
  dplyr::filter( missions_ipa != "") |> 
  mutate(missions_ipa = fct_infreq(missions_ipa))

var_label(zz$missions_ipa) <- "Missions des IPA"

nl <- dire |> 
  dplyr::select(id,nb_lits_rec) |> 
  mutate(id = as.factor(id))

zz <- left_join(zz,nl, by = "id")
```



```{r}
#| label: tbl-connais-ipa
#| tbl-cap: Évaluer la connaissance du métier d’\gls{ipa} au sein des \textsc{Ehpad}

zz |> 
  dplyr::select(missions_ipa,profession) |> 
  tbl_summary(by = profession) |> 
    bold_labels() |>
  modify_header(label ~ " ") |>
  add_p(test = ptest) |> 
  gexptabph(exp = expx,
            nomfich = classeur ,
            nomsheet = "connais-ipa") |> 
  column_spec(1, width = "30em")
```

\clearpage
### Nombre de cases cochées

```{r}
#| label: tbl-ipacases
#| tbl-cap: Évaluer la connaissance du métier d’\gls{ipa} au sein des \textsc{Ehpad}

ipam <- ipam |>
  dplyr::filter(missions_ipa != "")
ipai <- ipai |>
  dplyr::filter(missions_ipa != "")
ipad <- ipad |>
  dplyr::filter(missions_ipa != "")

dd <- round(nrow(ipad) / nrow(dire), 2)
mm <- round(nrow(ipam) / nrow(medco), 2)
ii <- round(nrow(ipai) / nrow(idec), 2)

nn <- c(dd, mm, ii)
zzn <- tibble(nprof, nn)
names(zzn) <- c("Profession", "Nb de
               cases cochées")
zzn |>
  kbl(booktabs = TRUE) |>
  kable_styling(latex_options = "striped")

if (expx) {
  zzn |>
    as_tibble() |>
    write_ods(path = classeur,
              sheet = "mission_ipa",
              append = TRUE)
}
```

### Taille de l'établissement

```{r}
#| label: tbl-ipataille
#| tbl-cap: Évaluer la connaissance du métier d’\gls{ipa} au sein des \textsc{Ehpad} selon la taille de 'établissement

zzn <- tibble(levels(dire$nb_lits_rec),
              table(zz$nb_lits_rec) / table(dire$nb_lits_rec)) |>
  rename('taille de l\'établissement' = 'levels(dire$nb_lits_rec)',
         'nb de case cochées' = 'table(zz$nb_lits_rec)/table(dire$nb_lits_rec)')

zzn |>
  kbl(booktabs = TRUE) |>
  kable_styling(latex_options = "striped")

if (expx) {
  zzn |>
    as_tibble() |>
    write_ods(path = classeur,
              sheet = "ipa_taille",
              append = TRUE)
}
```


## Critère V

*Définir les axes d’amélioration à une bonne prise en charge médicale des résidents.*

```{r}
#| label: amelioration-prep 

nn <- paste0("moyen", 1:11)

direm <- dire |>
  dplyr::select(moyens_a_mettre_en_oeuvre) |>
  separate_wider_delim(moyens_a_mettre_en_oeuvre, ";", names = nn) |>
  mutate(profession = "Directeur")

medcom <- medco |>
  dplyr::select(moyens_a_mettre_en_oeuvre) |>
  separate_wider_delim(moyens_a_mettre_en_oeuvre, ";", names = nn) |>
  mutate(profession = "Médecin coordonateur")

idecm <- idec |>
  dplyr::select(moyens_a_mettre) |>
  separate_wider_delim(moyens_a_mettre, ";", names = nn) |>
  mutate(profession = "IDEC")

moyen <- rbind(direm, medcom, idecm) |>
  pivot_longer(starts_with("moyen")) |>
  dplyr::filter(value != "") |> 
mutate(profession = fct_relevel(profession,
    "Directeur", "Médecin coordonateur", "IDEC"
  )) |> 
  ## Recodage de moyen$value
mutate(value = fct_recode(value, 
    "Accompagnement des familles" = "Accompagnement des familles ",
    "Plus de temps médical" = "Plus de temps médical  ",
    "Plus de temps paramédical" = "Plus de temps paramédical        ",
    "Coordination ville-hôpital" = "Meilleure coordination ville-hôpital en filière gériatrique",
    "Présence d'une assistance sociale" = "Présence d’une assistance sociale"
  )) |> 
  mutate(value = as.factor(value))
var_label(moyen$value) <- "Item"
```

```{r}
#| label: tbl-moyen1
#| tbl-cap: Axes d’amélioration à une bonne prise en charge médicale des résidents (premier cité)
#| 
xx <- chisq.test(moyen$value, moyen$profession)
xx <- beaup(xx$p.value, affp = 1)

moyen |> 
  dplyr::filter(name == "moyen1") |> 
  dplyr::select(profession, value) |> 
  mutate(value = fct_infreq(value)) |> 
  tbl_summary(by = profession) |> 
#    add_overall(col_label = "**Total**") |> 
    bold_labels() |>
  add_p(test = ptest) |> 
  modify_header(label ~ " ") |>
  gexptabph(exp = expx,
            nomfich = classeur ,
            nomsheet = "moyen1")
```

Il n'y a pas de différence visible sur l’ensemble des items (`r xx`). Une comparaison item par item est impossible vu le faible nombre de réponse pour chaque.

```{r}
#| label: tbl-moyen5
#| tbl-cap: Axes d’amélioration à une bonne prise en charge médicale des résidents (cinq premiers cités)

lnn <- paste0("moyen",1:5)

moyen |> 
  dplyr::filter(name %in% lnn) |> 
  dplyr::select(profession, value) |> 

  mutate(value = fct_infreq(value)) |> 
  tbl_summary(by = profession) |> 
  add_p(test = ptest) |> 
 #   add_overall(col_label = "**Total**") |> 
    bold_labels() |>
  modify_header(label ~ " ") |>
  gexptabph(exp = expx,
            nomfich = classeur ,
            nomsheet = "moyen5")
```

Le graphique ne reprend que les axes les plus cités dans les cinq premiers. 

```{r}
#| label: fig-axes
#| fig-cap: Axes d’amélioration à une bonne prise en charge médicale des résidents

moyen |> 
  dplyr::filter(name %in% lnn) |> 
  mutate(value = fct_lump_min(value, 3)) |> 
  mutate(value =   fct_recode(value,
    "Délégation de  tâches" = "Délégation de certaines tâches",
    "coordination ville-hôpital" = "Meilleure coordination ville-hôpital",
    "Équipes mobiles" = "Plus d’équipes mobiles",
    "Temps médical" = "Plus de temps médical",
    "Temps paramédical" = "Plus de temps paramédical",
    "Assistance sociale" = "Présence d'une assistance sociale"
  )) |> 
  mutate(value = fct_infreq(value)) |> 
    mutate(value = fct_lump_n(value , 6)) |> 
  dplyr::filter (value != "Other") |> 
  ggplot() +
  aes(x = value, fill = profession) +
  geom_bar(stat = "count", position = "dodge") +
  labs(title = "Axes d’amélioration à une bonne prise en charge",
      subtitle = "médicale des résidents",
      x = "",
      y = "n",
      caption = "",
      fill = "") +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 14, face = "bold"),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 0,
      vjust = .5
    ),
  axis.text.x = element_text(size = 10, 
                             angle = 30,
                             hjust = 1),
  axis.text.y = element_text(size = 12),
  legend.position = "bottom"
  )
```

```{r}
#| label: fig-axes-rad
#| fig-cap: Axes d’amélioration à une bonne prise en charge médicale des résidents


mm <- moyen |> 
  dplyr::filter(name %in% lnn) |> 
  mutate(value = fct_lump_min(value, 3)) |> 
  mutate(value =   fct_recode(value,
    "Délégation de  tâches" = "Délégation de certaines tâches",
    "Équipes mobiles" = "Plus d’équipes mobiles",
    "Temps médical" = "Plus de temps médical",
    "Temps paramédical" = "Plus de temps paramédical",
    "Assistance sociale" = "Présence d'une assistance sociale"
  )) 

aa <- table(mm$profession,mm$value)
aa <- 100*aa/nbprof
max <- rep(100,10)
min <- rep(0,10)
aa <- rbind(max,min,aa)
aa <- data.frame(aa)
#tit <- c("IDEC","Médecin coordinateur")
colx = c("#00AFBB", "#FC4E07", "#00AA11")


  par(cex = 0.6)
radarchart(aa, title = "Axes d’amélioration à une bonne prise en charge médicale des résidents", pcol = colx, , plwd =2, plty = 1, vlcex = 1.3)
legend(
  x = "bottom", legend = rownames(aa[-c(1,2),]), horiz = TRUE, col = colx,
  bty = 0,pch = 20, yjust = -2, xjust = 0) 
```


\appendix

# Technique 

L'analyse statistique a été réalisée avec le logiciel **R**[@rstat] & divers packages. Outre ceux cités dans le texte on a utilisé en particulier `tidyverse` [@tidy] & `baseph` [@baseph].

Un dépôt GitHub a été utilisé qui ne comprend que le code & non les données ou résultats. Au besoin un faux tableau de données sera présenté pour permettre des tests.

<https://github.com/philippemichel/idaoh95/>

\printglossaries

\addcontentsline{toc}{chapter}{C. Bibliographie}
